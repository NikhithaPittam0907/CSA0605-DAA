from itertools import combinations

def subset_sums(arr):
    sums = set()
    for r in range(len(arr) + 1):
        for combo in combinations(arr, r):
            sums.add(sum(combo))
    return sums

def meet_in_the_middle(arr, target):
    mid = len(arr) // 2
    left_sums = subset_sums(arr[:mid])
    right_sums = subset_sums(arr[mid:])
    
    for s in left_sums:
        if (target - s) in right_sums:
            return True
    return False

# Example usage
E1 = [1, 3, 9, 2, 7, 12]
E2 = [3, 34, 4, 12, 5, 2]
target_sum = 15

print(meet_in_the_middle(E1, target_sum))  # Output: True
print(meet_in_the_middle(E2, target_sum))  # Output: True
