def is_safe(graph, vertex, color, c):
    for neighbor in graph[vertex]:
        if color[neighbor] == c:
            return False
    return True

def graph_coloring_util(graph, m, color, vertex):
    if vertex == len(graph):
        return True

    for c in range(1, m + 1):
        if is_safe(graph, vertex, color, c):
            color[vertex] = c
            if graph_coloring_util(graph, m, color, vertex + 1):
                return True
            color[vertex] = 0  # Backtrack

    return False

def graph_coloring(graph, m):
    color = [0] * len(graph)
    if graph_coloring_util(graph, m, color, 0):
        return color
    return None

# Example usage
edges = [(0, 1), (1, 2), (2, 3), (3, 0), (0, 2)]
n = 4
graph = [[] for _ in range(n)]
for u, v in edges:
    graph[u].append(v)
    graph[v].append(u)

m = 3  # Number of colors
result = graph_coloring(graph, m)
print("Coloring of the graph:", result)
