def catMouseGame(graph):
    n = len(graph)
    memo = {}
    def dfs(mouse, cat, turn):
        if mouse == 0: return 1  
        if cat == mouse: return 2 
        if (mouse, cat, turn) in memo: return memo[(mouse, cat, turn)]
        if turn % 2 == 0:  
            for next_mouse in graph[mouse]:
                if dfs(next_mouse, cat, turn + 1) == 1:
                    memo[(mouse, cat, turn)] = 1
                    return 1
            memo[(mouse, cat, turn)] = 0  
            return 0
        else:  
            for next_cat in graph[cat]:
                if next_cat != 0 and dfs(mouse, next_cat, turn + 1) == 2:
                    memo[(mouse, cat, turn)] = 2
                    return 2
            memo[(mouse, cat, turn)] = 0 
            return 0
    return dfs(1, 2, 0)
print(catMouseGame([[2,5],[3],[0,4,5],[1,4,5],[2,3],[0,2,3]]))  
print(catMouseGame([[1,3],[0],[3],[0,2]]))  
