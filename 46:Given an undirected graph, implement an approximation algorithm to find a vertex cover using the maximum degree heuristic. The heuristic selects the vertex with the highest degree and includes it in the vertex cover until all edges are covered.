def vertex_cover(graph):
    cover = set()
    edges = set((u, v) for u in graph for v in graph[u])
    
    while edges:
        # Find the vertex with the maximum degree
        vertex = max(graph, key=lambda v: len(graph[v]))
        cover.add(vertex)
        
        # Remove the vertex and its edges
        for neighbor in graph[vertex]:
            edges.discard((vertex, neighbor))
            edges.discard((neighbor, vertex))
        del graph[vertex]
    
    return cover

# Example usage
graph = {
    0: [1, 2],
    1: [0, 2],
    2: [0, 1, 3],
    3: [2]
}

print(vertex_cover(graph))  # Output: {2, 1} or {2, 0} depending on the graph structure
